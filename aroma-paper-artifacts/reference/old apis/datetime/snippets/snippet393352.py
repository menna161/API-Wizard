import itertools
from enum import Enum
import numpy as np
import pandas as pd
from pytz import FixedOffset, timezone, utc
from feast.infra.offline_stores.offline_utils import DEFAULT_ENTITY_DF_EVENT_TIMESTAMP_COL


def create_driver_hourly_stats_df(drivers, start_date, end_date) -> pd.DataFrame:
    '\n    Example df generated by this function:\n\n    | event_timestamp  | driver_id | conv_rate | acc_rate | avg_daily_trips | created          |\n    |------------------+-----------+-----------+----------+-----------------+------------------|\n    | 2021-03-17 19:31 |     5010  | 0.229297  | 0.685843 | 861             | 2021-03-24 19:34 |\n    | 2021-03-17 20:31 |     5010  | 0.781655  | 0.861280 | 769             | 2021-03-24 19:34 |\n    | 2021-03-17 21:31 |     5010  | 0.150333  | 0.525581 | 778             | 2021-03-24 19:34 |\n    | 2021-03-17 22:31 |     5010  | 0.951701  | 0.228883 | 570             | 2021-03-24 19:34 |\n    | 2021-03-17 23:31 |     5010  | 0.819598  | 0.262503 | 473             | 2021-03-24 19:34 |\n    |                  |      ...  |      ...  |      ... | ...             |                  |\n    | 2021-03-24 16:31 |     5001  | 0.061585  | 0.658140 | 477             | 2021-03-24 19:34 |\n    | 2021-03-24 17:31 |     5001  | 0.088949  | 0.303897 | 618             | 2021-03-24 19:34 |\n    | 2021-03-24 18:31 |     5001  | 0.096652  | 0.747421 | 480             | 2021-03-24 19:34 |\n    | 2021-03-17 19:31 |     5005  | 0.142936  | 0.707596 | 466             | 2021-03-24 19:34 |\n    | 2021-03-17 19:31 |     5005  | 0.142936  | 0.707596 | 466             | 2021-03-24 19:34 |\n    '
    df_hourly = pd.DataFrame({'event_timestamp': ([pd.Timestamp(dt, unit='ms', tz='UTC').round('ms') for dt in pd.date_range(start=start_date, end=end_date, freq='1H', inclusive='left')] + [pd.Timestamp(year=2021, month=4, day=12, hour=7, minute=0, second=0, tz='UTC')])})
    df_all_drivers = pd.DataFrame()
    for driver in drivers:
        df_hourly_copy = df_hourly.copy()
        df_hourly_copy['driver_id'] = driver
        df_all_drivers = pd.concat([df_hourly_copy, df_all_drivers])
    df_all_drivers.reset_index(drop=True, inplace=True)
    rows = df_all_drivers['event_timestamp'].count()
    df_all_drivers['conv_rate'] = np.random.random(size=rows).astype(np.float32)
    df_all_drivers['acc_rate'] = np.random.random(size=rows).astype(np.float32)
    df_all_drivers['avg_daily_trips'] = np.random.randint(0, 1000, size=rows).astype(np.int32)
    df_all_drivers['created'] = pd.to_datetime(pd.Timestamp.now(tz=None).round('ms'))
    late_row = df_all_drivers[(rows // 2):((rows // 2) + 1)]
    df_all_drivers = pd.concat([df_all_drivers, late_row, late_row], ignore_index=True)
    return df_all_drivers
