import io
from os.path import join
import os.path
import shutil
import sys
from distutils.core import Extension
from distutils.dep_util import newer_group
from astropy_helpers.utils import import_file
from astropy_helpers import setup_helpers
from astropy_helpers.distutils_helpers import get_distutils_build_option
import ctypes


def generate_c_docstrings():
    docstrings = import_file(os.path.join(WCSROOT, 'docstrings.py'))
    docstrings = docstrings.__dict__
    keys = [key for (key, val) in docstrings.items() if ((not key.startswith('__')) and isinstance(val, str))]
    keys.sort()
    docs = {}
    for key in keys:
        docs[key] = (docstrings[key].encode('utf8').lstrip() + b'\x00')
    h_file = io.StringIO()
    h_file.write('/*\nDO NOT EDIT!\n\nThis file is autogenerated by astropy/wcs/setup_package.py.  To edit\nits contents, edit astropy/wcs/docstrings.py\n*/\n\n#ifndef __DOCSTRINGS_H__\n#define __DOCSTRINGS_H__\n\n')
    for key in keys:
        val = docs[key]
        h_file.write('extern char doc_{}[{}];\n'.format(key, len(val)))
    h_file.write('\n#endif\n\n')
    setup_helpers.write_if_different(join(WCSROOT, 'include', 'astropy_wcs', 'docstrings.h'), h_file.getvalue().encode('utf-8'))
    c_file = io.StringIO()
    c_file.write('/*\nDO NOT EDIT!\n\nThis file is autogenerated by astropy/wcs/setup_package.py.  To edit\nits contents, edit astropy/wcs/docstrings.py\n\nThe weirdness here with strncpy is because some C compilers, notably\nMSVC, do not support string literals greater than 256 characters.\n*/\n\n#include <string.h>\n#include "astropy_wcs/docstrings.h"\n\n')
    for key in keys:
        val = docs[key]
        c_file.write('char doc_{0}[{1}] = {{\n'.format(key, len(val)))
        for i in range(0, len(val), 12):
            section = val[i:(i + 12)]
            c_file.write('    ')
            c_file.write(''.join((f'0x{x:02x}, ' for x in section)))
            c_file.write('\n')
        c_file.write('    };\n\n')
    setup_helpers.write_if_different(join(WCSROOT, 'src', 'docstrings.c'), c_file.getvalue().encode('utf-8'))
