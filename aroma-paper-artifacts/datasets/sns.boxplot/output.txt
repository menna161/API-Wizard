------------------------- example 1 ------------------------ 
def plot_auc_shortest_distance_boxplot(datas, jitter_datas, fig_file, xticks, ylabel):
    plt.clf()
    (fig, ax) = plt.subplots(figsize=((FIG_WIDTH * 1.5), FIG_HEIGHT))
    ax = sns.boxplot(data=datas, color='.8')
    ax = sns.stripplot(data=jitter_datas, jitter=True, size=1)
    ax.set_ylabel(ylabel)
    ax.set_xlabel('Distance to the nearest seen cell type')
    ax.set_xticklabels(xticks)
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)
    plt.tight_layout()
    plt.savefig(fig_file)

examples  ||  representativeness  ||  number of lines  || number of comments   ||  relevancy  
example1  ||          2           ||        12         ||         0        ||        0.0         

avg       ||          100.0           ||        12.0         ||         0.0        ||         0.0        

idx = 0:------------------- similar code ------------------ index = 1, score = 5.0 
def plot_auc_shortest_distance_boxplot(datas, jitter_datas, fig_file, xticks, ylabel):
    plt.clf()
    (fig, ax) = plt.subplots(figsize=((FIG_WIDTH * 1.5), FIG_HEIGHT))
    ax = sns.boxplot(data=datas, color='.8')
    ax = sns.stripplot(data=jitter_datas, jitter=True, size=1)
    ax.set_ylabel(ylabel)
    ax.set_xlabel('Distance to the nearest seen cell type')
    ax.set_xticklabels(xticks)
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)
    plt.tight_layout()
    plt.savefig(fig_file)

------------------- similar code (pruned) ------------------ score = 0.46153846153846156 
def  ... ():
     ...  = sns.boxplot

idx = 1:------------------- similar code ------------------ index = 0, score = 5.0 
def plot_auc_region_violin(datas, jitter_datas, fig_file, xticks, cutoff, ylabel):
    plt.clf()
    (fig, ax) = plt.subplots(figsize=((FIG_WIDTH * 1.5), FIG_HEIGHT))
    ax = sns.boxplot(data=datas, color='.8')
    ax = sns.stripplot(data=jitter_datas, jitter=True, size=1)
    ax.set_ylabel(ylabel)
    ax.set_xlabel((('Number of seen cell types in the ' + str(cutoff)) + '-hop region'))
    ax.set_xticklabels(xticks)
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)
    plt.tight_layout()
    plt.savefig(fig_file)

------------------- similar code (pruned) ------------------ score = 0.46153846153846156 
def  ... ():
     ...  = sns.boxplot

